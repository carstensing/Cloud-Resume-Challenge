# ------------------------------------------------------------------------------
# Files created by dev
# ------------------------------------------------------------------------------
**/*.secrets
act/artifacts/
**/temp
push.sh

# ------------------------------------------------------------------------------
# Hugo
# ------------------------------------------------------------------------------
# Generated files by hugo
**/public/
**/resources/_gen/
**/assets/jsconfig.json
hugo_stats.json

# Executable may be added to repository
hugo.exe
hugo.darwin
hugo.linux

# Temporary lock file while building
**/hugo_site/.hugo_build.lock

# ------------------------------------------------------------------------------
# pytest
# ------------------------------------------------------------------------------
# Automatically generated by `hgimportsvn`
.svn
.hgsvn

# Ignore local virtualenvs
*env/
.Python/

.pytest_cache
.mypy_cache
.vscode
__pycache__/
.python-version

# ------------------------------------------------------------------------------
# Terraform
# ------------------------------------------------------------------------------
# Local .terraform directories
.terraform/
hashicorp/

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.

*.tfvars

# I'm allowing terraform.tfvars because it doesn't contain sensitive info.
!backend/src/terraform/terraform.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Ignore transient lock info files created by terraform apply
.terraform.tfstate.lock.info

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc
